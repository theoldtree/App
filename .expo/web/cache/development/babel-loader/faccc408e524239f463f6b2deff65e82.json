{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera } from 'expo-camera';\nimport styled from 'styled-components/native';\nimport { CenterView, ContentText } from \"../../components/Styles/styles\";\nexport default function CameraScreen() {\n  var camera;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var snap = function snap() {\n    var options, data;\n    return _regeneratorRuntime.async(function snap$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (camera) {\n              _context2.next = 6;\n              break;\n            }\n\n            options = {\n              quality: 1,\n              base64: true\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(camera.takePictureAsync(options));\n\n          case 4:\n            data = _context2.sent;\n            console.log(data);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(View, null);\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Camera, {\n    style: styles.camera,\n    type: type,\n    ref: function ref(_ref) {\n      camera = _ref;\n    }\n  }), React.createElement(BottomButtonContainer, null, React.createElement(CenterView, null, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  }, React.createElement(ContentText, {\n    size: 20,\n    color: \"blue\"\n  }, \"Flip\"))), React.createElement(CenterView, null, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return snap();\n    }\n  }, React.createElement(ContentText, {\n    size: 20,\n    color: \"blue\"\n  }, \"Flip\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  container2: {\n    flex: 0.1\n  },\n  camera: {\n    flex: 0.9\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20\n  },\n  button: {\n    flex: 0.1,\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    color: 'white'\n  }\n});\nvar BottomButtonContainer = styled(CenterView)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 0.1;\\n    flexDirection: 'row'\\n    margin: 20px\\n  \"])));","map":{"version":3,"sources":["/Users/yujeongmu/Desktop/App/src/screens/Camera/CameraScreen.js"],"names":["React","useState","useEffect","Camera","styled","CenterView","ContentText","CameraScreen","camera","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestCameraPermissionsAsync","status","snap","options","quality","base64","takePictureAsync","data","console","log","styles","container","ref","button","front","StyleSheet","create","flex","container2","buttonContainer","backgroundColor","flexDirection","margin","alignSelf","alignItems","text","fontSize","color","BottomButtonContainer"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { Text, View, Button } from 'react-native';\n// import { FlexCenterView, DefaultButton } from '../../components/Styles/styles';\n\n// export default function CameraScreen({ navigation }) {\n\n//     const ButtonHandler = () => {\n//     }\n\n//     return (\n//         <FlexCenterView>\n//             <ContentText size={20}>CameraScreen</ContentText>\n//             <DefaultButton\n//                 onPress={ButtonHandler}\n//             >\n//                 <ContentText\n//                     size={15}\n//                 >\n//                     Take Photo\n//                 </ContentText>\n//             </DefaultButton>\n//         </FlexCenterView>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport styled from 'styled-components/native';\nimport { CenterView, ContentText } from '../../components/Styles/styles';\n\nexport default function CameraScreen() {\n    let camera: Camera;\n    const [hasPermission, setHasPermission] = useState(null);\n    const [type, setType] = useState(Camera.Constants.Type.back);\n\n    useEffect(() => {\n        (async () => {\n            const { status } = await Camera.requestCameraPermissionsAsync();\n            setHasPermission(status === 'granted');\n        })();\n    }, []);\n\n    const snap = async () => {\n        if (!camera) {\n            const options = { quality: 1, base64: true };\n            const data = await camera.takePictureAsync(options);\n            console.log(data);\n        }\n    };\n\n    if (hasPermission === null) {\n        return <View />;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n    return (\n        <View style={styles.container}>\n            <Camera\n                style={styles.camera}\n                type={type}\n                ref={\n                    ref => {\n                        camera = ref;\n                    }}>\n            </Camera>\n            <BottomButtonContainer>\n                    <CenterView>\n                        <TouchableOpacity\n                            style={styles.button}\n                            onPress={() => {\n                                setType(\n                                    type === Camera.Constants.Type.back\n                                        ? Camera.Constants.Type.front\n                                        : Camera.Constants.Type.back\n                                );\n                            }}>\n                            <ContentText\n                                size={20}\n                                color=\"blue\"\n                            >\n                                Flip\n                            </ContentText>\n                        </TouchableOpacity>\n                    </CenterView>\n                    <CenterView>\n                        <TouchableOpacity\n                            style={styles.button}\n                            onPress={() => snap()}>\n                            <ContentText\n                                size={20}\n                                color=\"blue\"\n                            >\n                                Flip\n                            </ContentText>\n                        </TouchableOpacity>\n                    </CenterView>\n            </BottomButtonContainer>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    container2: {\n        flex: 0.1,\n    },\n    camera: {\n        flex: 0.9,\n    },\n    buttonContainer: {\n        flex: 1,\n        backgroundColor: 'transparent',\n        flexDirection: 'row',\n        margin: 20,\n    },\n    button: {\n        flex: 0.1,\n        alignSelf: 'flex-end',\n        alignItems: 'center',\n    },\n    text: {\n        fontSize: 18,\n        color: 'white',\n    },\n});\n\nconst BottomButtonContainer = styled(CenterView)`\n    flex: 0.1;\n    flexDirection: 'row'\n    margin: 20px\n  `\n\n"]},"metadata":{},"sourceType":"module"}