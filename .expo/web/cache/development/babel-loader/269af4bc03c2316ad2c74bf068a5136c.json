{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport React, { useEffect, useState } from 'react';\nimport ImageColors from 'react-native-image-colors';\nvar yunaUrl = 'https://i.imgur.com/68jyjZT.jpg';\nvar catUrl = 'https://i.imgur.com/O3XSdU7.jpg';\n\nvar catImg = require(\"../../images/cat.png\");\n\nvar initialState = {\n  colorOne: {\n    value: '',\n    name: ''\n  },\n  colorTwo: {\n    value: '',\n    name: ''\n  },\n  colorThree: {\n    value: '',\n    name: ''\n  },\n  colorFour: {\n    value: '',\n    name: ''\n  },\n  rawResult: ''\n};\nexport default function ResultScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      colors = _useState2[0],\n      setColors = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    var fetchColors = function fetchColors() {\n      var result;\n      return _regeneratorRuntime.async(function fetchColors$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImageColors.getColors(yunaUrl, {\n                fallback: '#000000',\n                quality: 'low',\n                pixelSpacing: 5,\n                cache: true\n              }));\n\n            case 2:\n              result = _context.sent;\n              _context.t0 = result.platform;\n              _context.next = _context.t0 === 'android' ? 6 : _context.t0 === 'web' ? 6 : _context.t0 === 'ios' ? 8 : 10;\n              break;\n\n            case 6:\n              setColors({\n                colorOne: {\n                  value: result.lightVibrant,\n                  name: 'lightVibrant'\n                },\n                colorTwo: {\n                  value: result.dominant,\n                  name: 'dominant'\n                },\n                colorThree: {\n                  value: result.vibrant,\n                  name: 'vibrant'\n                },\n                colorFour: {\n                  value: result.darkVibrant,\n                  name: 'darkVibrant'\n                },\n                rawResult: JSON.stringify(result)\n              });\n              return _context.abrupt(\"break\", 11);\n\n            case 8:\n              setColors({\n                colorOne: {\n                  value: result.background,\n                  name: 'background'\n                },\n                colorTwo: {\n                  value: result.detail,\n                  name: 'detail'\n                },\n                colorThree: {\n                  value: result.primary,\n                  name: 'primary'\n                },\n                colorFour: {\n                  value: result.secondary,\n                  name: 'secondary'\n                },\n                rawResult: JSON.stringify(result)\n              });\n              return _context.abrupt(\"break\", 11);\n\n            case 10:\n              throw new Error('Unexpected platform');\n\n            case 11:\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    fetchColors();\n  }, []);\n\n  if (loading) {\n    return React.createElement(View, {\n      style: styles.container\n    }, React.createElement(Text, {\n      style: styles.loading\n    }, \"Loading...\"));\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(SafeAreaView, {\n    style: styles.resultContainer\n  }, React.createElement(Text, {\n    style: styles.loading\n  }, \"Result:\"), React.createElement(Text, {\n    style: styles.result\n  }, colors.rawResult)), React.createElement(Image, {\n    resizeMode: \"contain\",\n    style: styles.image,\n    source: {\n      uri: yunaUrl\n    }\n  }), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Box, {\n    name: colors.colorOne.name,\n    value: colors.colorOne.value\n  }), React.createElement(Box, {\n    name: colors.colorTwo.name,\n    value: colors.colorTwo.value\n  })), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(Box, {\n    name: colors.colorThree.name,\n    value: colors.colorThree.value\n  }), React.createElement(Box, {\n    name: colors.colorFour.name,\n    value: colors.colorFour.value\n  })));\n}\n\nvar Box = function Box(props) {\n  return React.createElement(View, {\n    style: [styles.box, {\n      backgroundColor: props.value\n    }]\n  }, React.createElement(Text, {\n    style: styles.colorName\n  }, props.name));\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    height: 250\n  },\n  colorName: {\n    backgroundColor: 'white',\n    padding: 4,\n    fontSize: 18\n  },\n  box: {\n    flex: 1,\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  row: {\n    flex: 1,\n    flexDirection: 'row',\n    width: '100%'\n  },\n  resultContainer: {\n    flex: 1,\n    padding: 20,\n    width: Platform.select({\n      web: 'fill-available',\n      ios: '100%',\n      android: '100%'\n    })\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  loading: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  },\n  result: {\n    textAlign: 'center',\n    color: '#333333'\n  }\n});","map":{"version":3,"sources":["/Users/yujeongmu/Desktop/App/src/screens/Result/ResultScreen.js"],"names":["React","useEffect","useState","ImageColors","yunaUrl","catUrl","catImg","require","initialState","colorOne","value","name","colorTwo","colorThree","colorFour","rawResult","ResultScreen","navigation","colors","setColors","loading","setLoading","fetchColors","getColors","fallback","quality","pixelSpacing","cache","result","platform","lightVibrant","dominant","vibrant","darkVibrant","JSON","stringify","background","detail","primary","secondary","Error","styles","container","resultContainer","image","uri","row","Box","props","box","backgroundColor","colorName","StyleSheet","create","width","height","padding","fontSize","flex","justifyContent","alignItems","flexDirection","Platform","select","web","ios","android","textAlign","margin","color"],"mappings":"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","sourcesContent":["import {\n    Platform,\n    StyleSheet,\n    Text,\n    View,\n    Image,\n    SafeAreaView,\n  } from 'react-native'\n  import React, { useEffect, useState } from 'react'\n  import ImageColors from 'react-native-image-colors'\n  \n  const yunaUrl = 'https://i.imgur.com/68jyjZT.jpg'\n  const catUrl = 'https://i.imgur.com/O3XSdU7.jpg'\n  const catImg = require('../../images/cat.png')\n  \n  const initialState = {\n    colorOne: { value: '', name: '' },\n    colorTwo: { value: '', name: '' },\n    colorThree: { value: '', name: '' },\n    colorFour: { value: '', name: '' },\n    rawResult: '',\n  }\n  \n  export default function ResultScreen({ navigation }) {\n    const [colors, setColors] = useState(initialState)\n    const [loading, setLoading] = useState(true)\n  \n    useEffect(() => {\n      const fetchColors = async () => {\n        const result = await ImageColors.getColors(yunaUrl, {\n          fallback: '#000000',\n          quality: 'low',\n          pixelSpacing: 5,\n          cache: true,\n        })\n  \n        switch (result.platform) {\n          case 'android':\n          case 'web':\n            setColors({\n              colorOne: { value: result.lightVibrant, name: 'lightVibrant' },\n              colorTwo: { value: result.dominant, name: 'dominant' },\n              colorThree: { value: result.vibrant, name: 'vibrant' },\n              colorFour: { value: result.darkVibrant, name: 'darkVibrant' },\n              rawResult: JSON.stringify(result),\n            })\n            break\n          case 'ios':\n            setColors({\n              colorOne: { value: result.background, name: 'background' },\n              colorTwo: { value: result.detail, name: 'detail' },\n              colorThree: { value: result.primary, name: 'primary' },\n              colorFour: { value: result.secondary, name: 'secondary' },\n              rawResult: JSON.stringify(result),\n            })\n            break\n          default:\n            throw new Error('Unexpected platform')\n        }\n  \n        setLoading(false)\n      }\n  \n      fetchColors()\n    }, [])\n  \n    if (loading) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.loading}>Loading...</Text>\n        </View>\n      )\n    }\n  \n    return (\n      <View style={styles.container}>\n        <SafeAreaView style={styles.resultContainer}>\n          <Text style={styles.loading}>Result:</Text>\n          <Text style={styles.result}>{colors.rawResult}</Text>\n        </SafeAreaView>\n        <Image\n          resizeMode=\"contain\"\n          style={styles.image}\n          source={{ uri: yunaUrl }}\n        />\n        <View style={styles.row}>\n          <Box name={colors.colorOne.name} value={colors.colorOne.value} />\n          <Box name={colors.colorTwo.name} value={colors.colorTwo.value} />\n        </View>\n        <View style={styles.row}>\n          <Box name={colors.colorThree.name} value={colors.colorThree.value} />\n          <Box name={colors.colorFour.name} value={colors.colorFour.value} />\n        </View>\n      </View>\n    )\n  }\n  \n  const Box = (props) => {\n    return (\n      <View\n        style={[\n          styles.box,\n          {\n            backgroundColor: props.value,\n          },\n        ]}\n      >\n        <Text style={styles.colorName}>{props.name}</Text>\n      </View>\n    )\n  }\n  \n  const styles = StyleSheet.create({\n    image: {\n      width: '100%',\n      height: 250,\n    },\n    colorName: {\n      backgroundColor: 'white',\n      padding: 4,\n      fontSize: 18,\n    },\n    box: {\n      flex: 1,\n      backgroundColor: 'red',\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    row: {\n      flex: 1,\n      flexDirection: 'row',\n      width: '100%',\n    },\n    resultContainer: {\n      flex: 1,\n      padding: 20,\n      width: Platform.select({\n        web: 'fill-available',\n        ios: '100%',\n        android: '100%',\n      }),\n    },\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    loading: {\n      fontSize: 20,\n      textAlign: 'center',\n      margin: 10,\n    },\n    result: {\n      textAlign: 'center',\n      color: '#333333',\n    },\n  })"]},"metadata":{},"sourceType":"module"}