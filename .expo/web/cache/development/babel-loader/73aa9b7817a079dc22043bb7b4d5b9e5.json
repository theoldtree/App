{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera } from 'expo-camera';\nimport styled from 'styled-components/native';\nimport { CenterView, ContentText } from \"../../components/Styles/styles\";\nexport default function CameraScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, null);\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Camera, {\n    style: styles.camera,\n    type: type\n  }), React.createElement(BottomButtonContainer, null, React.createElement(CenterView, null, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  }, React.createElement(ContentText, {\n    size: 20\n  }, \"Flip\"))), React.createElement(CenterView, null, React.createElement(TouchableOpacity, {\n    style: styles.button\n  }, React.createElement(ContentText, {\n    size: 20\n  }, \"snap\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  container2: {\n    flex: 0.1\n  },\n  camera: {\n    flex: 0.8\n  },\n  button: {\n    flex: 0.1,\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    color: 'white'\n  }\n});\nvar BottomButtonContainer = styled(CenterView)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 0.2;\\n    flex-direction: row;\\n    margin: 20px;\\n  \"])));","map":{"version":3,"sources":["/Users/yujeongmu/Desktop/App/src/screens/Camera/CameraScreen.js"],"names":["React","useState","useEffect","Camera","styled","CenterView","ContentText","CameraScreen","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestCameraPermissionsAsync","status","styles","container","camera","button","front","StyleSheet","create","flex","container2","alignItems","text","fontSize","color","BottomButtonContainer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,WAArB;AAEA,eAAe,SAASC,YAAT,GAAwB;AACnC,kBAA0CN,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOO,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAwBR,QAAQ,CAACE,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACZ,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC4BC,MAAM,CAACY,6BAAP,EAD5B;;AAAA;AAAA;AACWC,cAAAA,MADX,yBACWA,MADX;AAEGP,cAAAA,gBAAgB,CAACO,MAAM,KAAK,SAAZ,CAAhB;;AAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAIH,GALQ,EAKN,EALM,CAAT;;AAeA,MAAIR,aAAa,KAAK,IAAtB,EAA4B;AACxB,WAAO,oBAAC,IAAD,OAAP;AACH;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AACzB,WAAO,oBAAC,IAAD,8BAAP;AACH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC;AAApB,KACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,MADlB;AAEI,IAAA,IAAI,EAAEN;AAFV,IADJ,EAMI,oBAAC,qBAAD,QACI,oBAAC,UAAD,QACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEI,MAAM,CAACG,MADlB;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXN,MAAAA,OAAO,CACHD,IAAI,KAAKV,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GACMT,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsBU,KAD5B,GAEMlB,MAAM,CAACO,SAAP,CAAiBC,IAAjB,CAAsBC,IAHzB,CAAP;AAKH;AARL,KASI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAE;AADV,YATJ,CADJ,CADJ,EAkBI,oBAAC,UAAD,QACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEK,MAAM,CAACG;AADlB,KAGI,oBAAC,WAAD;AACI,IAAA,IAAI,EAAE;AADV,YAHJ,CADJ,CAlBJ,CANJ,CADJ;AAuCH;AAED,IAAMH,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE;AADC,GADkB;AAI7BC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE;AADE,GAJiB;AAO7BL,EAAAA,MAAM,EAAE;AACJK,IAAAA,IAAI,EAAE;AADF,GAPqB;AAU7BJ,EAAAA,MAAM,EAAE;AACJI,IAAAA,IAAI,EAAE,GADF;AAEJE,IAAAA,UAAU,EAAE;AAFR,GAVqB;AAc7BC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE;AAFL;AAduB,CAAlB,CAAf;AAoBA,IAAMC,qBAAqB,GAAG1B,MAAM,CAACC,UAAD,CAAT,2IAA3B","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport styled from 'styled-components/native';\nimport { CenterView, ContentText } from '../../components/Styles/styles';\n\nexport default function CameraScreen() {\n    const [hasPermission, setHasPermission] = useState(null);\n    const [type, setType] = useState(Camera.Constants.Type.back);\n\n    useEffect(() => {\n        (async () => {\n            const { status } = await Camera.requestCameraPermissionsAsync();\n            setHasPermission(status === 'granted');\n        })();\n    }, []);\n\n    // const snap = async () => {\n    //     if (!camera) {\n    //         const options = { quality: 1, base64: true };\n    //         const data = await camera.takePictureAsync(options);\n    //         console.log(data);\n    //     }\n    // };\n\n    if (hasPermission === null) {\n        return <View />;\n    }\n    if (hasPermission === false) {\n        return <Text>No access to camera</Text>;\n    }\n    return (\n        <View style={styles.container}>\n            <Camera\n                style={styles.camera}\n                type={type}\n                >\n            </Camera>\n            <BottomButtonContainer>\n                <CenterView>\n                    <TouchableOpacity\n                        style={styles.button}\n                        onPress={() => {\n                            setType(\n                                type === Camera.Constants.Type.back\n                                    ? Camera.Constants.Type.front\n                                    : Camera.Constants.Type.back\n                            );\n                        }}>\n                        <ContentText\n                            size={20}\n                        >\n                            Flip\n                        </ContentText>\n                    </TouchableOpacity>\n                </CenterView>\n                <CenterView>\n                    <TouchableOpacity\n                        style={styles.button}\n                    >\n                        <ContentText\n                            size={20}\n                        >\n                            snap\n                        </ContentText>\n                    </TouchableOpacity>\n                </CenterView>\n            </BottomButtonContainer>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    container2: {\n        flex: 0.1,\n    },\n    camera: {\n        flex: 0.8,\n    },\n    button: {\n        flex: 0.1,\n        alignItems: 'center',\n    },\n    text: {\n        fontSize: 18,\n        color: 'white',\n    },\n});\n\nconst BottomButtonContainer = styled(CenterView)`\n    flex: 0.2;\n    flex-direction: row;\n    margin: 20px;\n  `\n\n"]},"metadata":{},"sourceType":"module"}