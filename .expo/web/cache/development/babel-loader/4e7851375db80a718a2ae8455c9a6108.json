{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _templateObject;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Camera } from 'expo-camera';\nimport styled from 'styled-components/native';\nimport { CenterView } from \"../../components/Styles/styles\";\nexport default function CameraScreen() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasPermission = _useState2[0],\n      setHasPermission = _useState2[1];\n\n  var _useState3 = useState(Camera.Constants.Type.back),\n      _useState4 = _slicedToArray(_useState3, 2),\n      type = _useState4[0],\n      setType = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Camera$request, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Camera.requestCameraPermissionsAsync());\n\n            case 2:\n              _await$Camera$request = _context.sent;\n              status = _await$Camera$request.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return React.createElement(View, null);\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, null, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Camera, {\n    style: styles.camera,\n    type: type\n  }), React.createElement(BottomButtonContainer, null, React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n    }\n  }, React.createElement(ContentText, {\n    size: 15\n  }, \" Flip\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  container2: {\n    flex: 0.1\n  },\n  camera: {\n    flex: 0.9\n  },\n  buttonContainer: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    flexDirection: 'row',\n    margin: 20\n  },\n  button: {\n    flex: 0.1,\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 18,\n    color: 'white'\n  }\n});\nvar BottomButtonContainer = styled(CenterView)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n    flex: 0.1;\\n    flexDirection: 'row'\\n    margin: 20px\\n  \"])));","map":{"version":3,"sources":["/Users/yujeongmu/Desktop/App/src/screens/Camera/CameraScreen.js"],"names":["React","useState","useEffect","Camera","styled","CenterView","CameraScreen","hasPermission","setHasPermission","Constants","Type","back","type","setType","requestCameraPermissionsAsync","status","styles","container","camera","buttonContainer","button","front","StyleSheet","create","flex","container2","backgroundColor","flexDirection","margin","alignSelf","alignItems","text","fontSize","color","BottomButtonContainer"],"mappings":";;;;;;AAyBA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,kBAA0CL,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,MAAOM,aAAP;AAAA,MAAsBC,gBAAtB;;AACA,mBAAwBP,QAAQ,CAACE,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsBC,IAAvB,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEAX,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC0BC,MAAM,CAACW,6BAAP,EAD1B;;AAAA;AAAA;AACSC,cAAAA,MADT,yBACSA,MADT;AAECP,cAAAA,gBAAgB,CAACO,MAAM,KAAK,SAAZ,CAAhB;;AAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,MAAIR,aAAa,KAAK,IAAtB,EAA4B;AAC1B,WAAO,oBAAC,IAAD,OAAP;AACD;;AACD,MAAIA,aAAa,KAAK,KAAtB,EAA6B;AAC3B,WAAO,oBAAC,IAAD,8BAAP;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,MAAM,CAACC;AAApB,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAED,MAAM,CAACE,MAAtB;AAA8B,IAAA,IAAI,EAAEN;AAApC,IADF,EAGE,oBAAC,qBAAD,QACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACG;AAApB,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEH,MAAM,CAACI,MADhB;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbP,MAAAA,OAAO,CACLD,IAAI,KAAKT,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsBC,IAA/B,GACIR,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsBW,KAD1B,GAEIlB,MAAM,CAACM,SAAP,CAAiBC,IAAjB,CAAsBC,IAHrB,CAAP;AAKD;AARH,KASE,oBAAC,WAAD;AACI,IAAA,IAAI,EAAI;AADZ,aATF,CADF,CADF,CAHF,CADF;AAuBD;AAED,IAAMK,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE;AADG,GADkB;AAI7BC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI,GAJiB;AAO7BN,EAAAA,MAAM,EAAE;AACNM,IAAAA,IAAI,EAAE;AADA,GAPqB;AAU7BL,EAAAA,eAAe,EAAE;AACfK,IAAAA,IAAI,EAAE,CADS;AAEfE,IAAAA,eAAe,EAAE,aAFF;AAGfC,IAAAA,aAAa,EAAE,KAHA;AAIfC,IAAAA,MAAM,EAAE;AAJO,GAVY;AAgB7BR,EAAAA,MAAM,EAAE;AACNI,IAAAA,IAAI,EAAE,GADA;AAENK,IAAAA,SAAS,EAAE,UAFL;AAGNC,IAAAA,UAAU,EAAE;AAHN,GAhBqB;AAqB7BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAE;AAFH;AArBuB,CAAlB,CAAf;AA2BE,IAAMC,qBAAqB,GAAG9B,MAAM,CAACC,UAAD,CAAT,0IAA3B","sourcesContent":["// import React from 'react';\n// import { Text, View, Button } from 'react-native';\n// import { FlexCenterView, DefaultButton } from '../../components/Styles/styles';\n\n// export default function CameraScreen({ navigation }) {\n\n//     const ButtonHandler = () => {\n//     }\n\n//     return (\n//         <FlexCenterView>\n//             <ContentText size={20}>CameraScreen</ContentText>\n//             <DefaultButton\n//                 onPress={ButtonHandler}\n//             >\n//                 <ContentText\n//                     size={15}\n//                 >\n//                     Take Photo\n//                 </ContentText>\n//             </DefaultButton>\n//         </FlexCenterView>\n//     );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { Camera } from 'expo-camera';\nimport styled from 'styled-components/native';\nimport { CenterView } from '../../components/Styles/styles';\n\nexport default function CameraScreen() {\n  const [hasPermission, setHasPermission] = useState(null);\n  const [type, setType] = useState(Camera.Constants.Type.back);\n\n  useEffect(() => {\n    (async () => {\n      const { status } = await Camera.requestCameraPermissionsAsync();\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n\n  if (hasPermission === null) {\n    return <View />;\n  }\n  if (hasPermission === false) {\n    return <Text>No access to camera</Text>;\n  }\n  return (\n    <View style={styles.container}>\n      <Camera style={styles.camera} type={type}>\n      </Camera>\n      <BottomButtonContainer>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => {\n              setType(\n                type === Camera.Constants.Type.back\n                  ? Camera.Constants.Type.front\n                  : Camera.Constants.Type.back\n              );\n            }}>\n            <ContentText\n                size = {15}> Flip\n            </ContentText>\n          </TouchableOpacity>\n        </View>\n      </BottomButtonContainer>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    container2: {\n      flex: 0.1,\n    },\n    camera: {\n      flex: 0.9,\n    },\n    buttonContainer: {\n      flex: 1,\n      backgroundColor: 'transparent',\n      flexDirection: 'row',\n      margin: 20,\n    },\n    button: {\n      flex: 0.1,\n      alignSelf: 'flex-end',\n      alignItems: 'center',\n    },\n    text: {\n      fontSize: 18,\n      color: 'white',\n    },\n  });\n\n  const BottomButtonContainer = styled(CenterView)`\n    flex: 0.1;\n    flexDirection: 'row'\n    margin: 20px\n  `\n\n "]},"metadata":{},"sourceType":"module"}